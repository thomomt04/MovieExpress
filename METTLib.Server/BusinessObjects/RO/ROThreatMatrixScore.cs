// Generated 19 Nov 2018 08:20 - Singular Systems Object Generator Version 2.2.694
//<auto-generated/>
using System;
using Csla;
using Csla.Serialization;
using Csla.Data;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using Singular;
using System.Data;
using System.Data.SqlClient;


namespace METTLib.RO
{
	[Serializable]
	public class ROThreatMatrixScore
	 : METTReadOnlyBase<ROThreatMatrixScore>
	{
		#region " Properties and Methods "

		#region " Properties "

		public static PropertyInfo<int> ThreatMatrixIDProperty = RegisterProperty<int>(c => c.ThreatMatrixID, "ID");
		/// <summary>
		/// Gets the ID value
		/// </summary>
		[Display(AutoGenerateField = false), Key]
		public int ThreatMatrixID
		{
			get { return GetProperty(ThreatMatrixIDProperty); }
		}

		public static PropertyInfo<int> QuestionnaireIDProperty = RegisterProperty<int>(c => c.QuestionnaireID, "QuestionnaireID");
		/// <summary>
		/// Gets the QuestionnaireID value
		/// </summary>
		[Display(Name = "QuestionnaireID", Description = "")]
		public int QuestionnaireID
		{
			get { return GetProperty(QuestionnaireIDProperty); }
		}

		public static PropertyInfo<int> ItemOneIDProperty = RegisterProperty<int>(c => c.ItemOneID, "ItemOneID");
		/// <summary>
		/// Gets the ItemOneID value
		/// </summary>
		[Display(Name = "ItemOneID", Description = "")]
		public int ItemOneID
		{
			get { return GetProperty(ItemOneIDProperty); }
		}

		public static PropertyInfo<int> ItemOneRatingIDProperty = RegisterProperty<int>(c => c.ItemOneRatingID, "ItemOneRatingID");
		/// <summary>
		/// Gets the ItemOneRatingID value
		/// </summary>
		[Display(Name = "ItemOneRatingID", Description = "")]
		public int ItemOneRatingID
		{
			get { return GetProperty(ItemOneRatingIDProperty); }
		}

		public static PropertyInfo<String> ThreatRatingItemNameOneProperty = RegisterProperty<String>(c => c.ThreatRatingItemNameOne, "ThreatRatingItemNameOne");
		/// <summary>
		/// Gets the ThreatRatingItemNameOne value
		/// </summary>
		[Display(Name = "ThreatRatingItemNameOne", Description = "")]
		public String ThreatRatingItemNameOne
		{
			get { return GetProperty(ThreatRatingItemNameOneProperty); }
		}

		public static PropertyInfo<int> ItemTwoIDProperty = RegisterProperty<int>(c => c.ItemTwoID, "ItemTwoID");
		/// <summary>
		/// Gets the ItemTwoID value
		/// </summary>
		[Display(Name = "ItemTwoID", Description = "")]
		public int ItemTwoID
		{
			get { return GetProperty(ItemTwoIDProperty); }
		}

		public static PropertyInfo<int> ItemTwoRatingIDProperty = RegisterProperty<int>(c => c.ItemTwoRatingID, "ItemTwoRatingID");
		/// <summary>
		/// Gets the ItemTwoRatingID value
		/// </summary>
		[Display(Name = "ItemTwoRatingID", Description = "")]
		public int ItemTwoRatingID
		{
			get { return GetProperty(ItemTwoRatingIDProperty); }
		}

		public static PropertyInfo<String> ThreatRatingItemNameTwoProperty = RegisterProperty<String>(c => c.ThreatRatingItemNameTwo, "ThreatRatingItemNameTwo");
		/// <summary>
		/// Gets the ThreatRatingItemNameTwo value
		/// </summary>
		[Display(Name = "ThreatRatingItemNameTwo", Description = "")]
		public String ThreatRatingItemNameTwo
		{
			get { return GetProperty(ThreatRatingItemNameTwoProperty); }
		}

		public static PropertyInfo<int> ScoreIDProperty = RegisterProperty<int>(c => c.ScoreID, "ScoreID");
		/// <summary>
		/// Gets the ScoreID value
		/// </summary>
		[Display(Name = "ScoreID", Description = "")]
		public int ScoreID
		{
			get { return GetProperty(ScoreIDProperty); }
		}

		public static PropertyInfo<String> RatingNameProperty = RegisterProperty<String>(c => c.RatingName, "RatingName");
		/// <summary>
		/// Gets the RatingName value
		/// </summary>
		[Display(Name = "RatingName", Description = "")]
		public String RatingName
		{
			get { return GetProperty(RatingNameProperty); }
		}

		public static PropertyInfo<Boolean> IsActiveIndProperty = RegisterProperty<Boolean>(c => c.IsActiveInd, "IsActiveInd", false);
		/// <summary>
		/// Gets the IsActiveInd value
		/// </summary>
		[Display(Name = "IsActiveInd", Description = "")]
		public Boolean IsActiveInd
		{
			get { return GetProperty(IsActiveIndProperty); }
		}

		#endregion

		#region " Methods "

		protected override object GetIdValue()
		{
			return GetProperty(ThreatMatrixIDProperty);
		}

		public override string ToString()
		{
			return this.ThreatRatingItemNameOne;
		}

		#endregion

		#endregion

		#region " Data Access & Factory Methods "

		internal static ROThreatMatrixScore GetROThreatMatrixScore(SafeDataReader dr)
		{
			var r = new ROThreatMatrixScore();
			r.Fetch(dr);
			return r;
		}

		protected void Fetch(SafeDataReader sdr)
		{
			int i = 0;
			LoadProperty(ThreatMatrixIDProperty, sdr.GetInt32(i++));
			LoadProperty(QuestionnaireIDProperty, Singular.Misc.ZeroNothing(sdr.GetInt32(i++)));
			LoadProperty(ItemOneIDProperty, Singular.Misc.ZeroNothing(sdr.GetInt32(i++)));
			LoadProperty(ItemOneRatingIDProperty, Singular.Misc.ZeroNothing(sdr.GetInt32(i++)));
			LoadProperty(ThreatRatingItemNameOneProperty, sdr.GetString(i++));
			LoadProperty(ItemTwoIDProperty, Singular.Misc.ZeroNothing(sdr.GetInt32(i++)));
			LoadProperty(ItemTwoRatingIDProperty, Singular.Misc.ZeroNothing(sdr.GetInt32(i++)));
			LoadProperty(ThreatRatingItemNameTwoProperty, sdr.GetString(i++));
			LoadProperty(ScoreIDProperty, Singular.Misc.ZeroNothing(sdr.GetInt32(i++)));
			LoadProperty(RatingNameProperty, sdr.GetString(i++));
			LoadProperty(IsActiveIndProperty, sdr.GetBoolean(i++));
		}

		#endregion

	}

}