// Generated 05 Nov 2018 10:41 - Singular Systems Object Generator Version 2.2.694
//<auto-generated/>
using System;
using Csla;
using Csla.Serialization;
using Csla.Data;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using Singular;
using System.Data;
using System.Data.SqlClient;


namespace METTLib.RO
{
	[Serializable]
	public class ROSecurityOrganisationProtectedAreaGroupUser
	 : METTReadOnlyBase<ROSecurityOrganisationProtectedAreaGroupUser>
	{
		#region " Properties and Methods "

		#region " Properties "


		public static PropertyInfo<int> SecurityOrganisationProtectedAreaGroupUserIdProperty = RegisterProperty<int>(c => c.SecurityOrganisationProtectedAreaGroupUserId, "ID", 0);
		/// <summary>
		/// Gets the ID value
		/// </summary>
		[Display(AutoGenerateField = false), Key]
		public int SecurityOrganisationProtectedAreaGroupUserId
		{
			get { return GetProperty(SecurityOrganisationProtectedAreaGroupUserIdProperty); }
		}

		public static PropertyInfo<int> UserIDProperty = RegisterProperty<int>(c => c.UserID, "User", 0);
		/// <summary>
		/// Gets the User value
		/// </summary>
		[Display(Name = "User", Description = "")]
		public int UserID
		{
			get { return GetProperty(UserIDProperty); }
		}

		public static PropertyInfo<int> OrganisationIDProperty = RegisterProperty<int>(c => c.OrganisationID, "Organisation", 0);
		/// <summary>
		/// Gets the Organisation value
		/// </summary>
		[Display(Name = "Organisation", Description = "")]
		public int OrganisationID
		{
			get { return GetProperty(OrganisationIDProperty); }
		}

		public static PropertyInfo<String> OrganisationNameProperty = RegisterProperty<String>(c => c.OrganisationName, "Organisation Name", "");
		/// <summary>
		/// Gets the Organisation Name value
		/// </summary>
		[Display(Name = "Organisation Name", Description = "")]
		public String OrganisationName
		{
			get { return GetProperty(OrganisationNameProperty); }
		}

		public static PropertyInfo<int> ProtectedAreaIDProperty = RegisterProperty<int>(c => c.ProtectedAreaID, "Protected Area", 0);
		/// <summary>
		/// Gets the Protected Area value
		/// </summary>
		[Display(Name = "Protected Area", Description = "")]
		public int ProtectedAreaID
		{
			get { return GetProperty(ProtectedAreaIDProperty); }
		}

		public static PropertyInfo<String> METTReportingNameProperty = RegisterProperty<String>(c => c.METTReportingName, "METT Reporting Name", "");
		/// <summary>
		/// Gets the METT Reporting Name value
		/// </summary>
		[Display(Name = "METT Reporting Name", Description = "")]
		public String METTReportingName
		{
			get { return GetProperty(METTReportingNameProperty); }
		}

		public static PropertyInfo<int> SecurityGroupIDProperty = RegisterProperty<int>(c => c.SecurityGroupID, "Security Group", 0);
		/// <summary>
		/// Gets the Security Group value
		/// </summary>
		[Display(Name = "Security Group", Description = "")]
		public int SecurityGroupID
		{
			get { return GetProperty(SecurityGroupIDProperty); }
		}

		public static PropertyInfo<String> SecurityGroupProperty = RegisterProperty<String>(c => c.SecurityGroup, "Security Group", "");
		/// <summary>
		/// Gets the Security Group value
		/// </summary>
		[Display(Name = "Security Group", Description = "")]
		public String SecurityGroup
		{
			get { return GetProperty(SecurityGroupProperty); }
		}

		public static PropertyInfo<int> SecurityGroupRoleIDProperty = RegisterProperty<int>(c => c.SecurityGroupRoleID, "Security Group Role", 0);
		/// <summary>
		/// Gets the Security Group Role value
		/// </summary>
		[Display(Name = "Security Group Role", Description = "")]
		public int SecurityGroupRoleID
		{
			get { return GetProperty(SecurityGroupRoleIDProperty); }
		}

		public static PropertyInfo<int> SecurityRoleIDProperty = RegisterProperty<int>(c => c.SecurityRoleID, "Security Role", 0);
		/// <summary>
		/// Gets the Security Role value
		/// </summary>
		[Display(Name = "Security Role", Description = "")]
		public int SecurityRoleID
		{
			get { return GetProperty(SecurityRoleIDProperty); }
		}

		public static PropertyInfo<String> SectionNameProperty = RegisterProperty<String>(c => c.SectionName, "Section Name", "");
		/// <summary>
		/// Gets the Section Name value
		/// </summary>
		[Display(Name = "Section Name", Description = "")]
		public String SectionName
		{
			get { return GetProperty(SectionNameProperty); }
		}

		public static PropertyInfo<String> SecurityRoleProperty = RegisterProperty<String>(c => c.SecurityRole, "Security Role", "");
		/// <summary>
		/// Gets the Security Role value
		/// </summary>
		[Display(Name = "Security Role", Description = "")]
		public String SecurityRole
		{
			get { return GetProperty(SecurityRoleProperty); }
		}

		public static PropertyInfo<String> DescriptionProperty = RegisterProperty<String>(c => c.Description, "Description", "");
		/// <summary>
		/// Gets the Description value
		/// </summary>
		[Display(Name = "Description", Description = "")]
		public String Description
		{
			get { return GetProperty(DescriptionProperty); }
		}

		#endregion

		#region " Methods "

		protected override object GetIdValue()
		{
			return GetProperty(SecurityOrganisationProtectedAreaGroupUserIdProperty);
		}

		public override string ToString()
		{
			return this.OrganisationName;
		}

		#endregion

		#endregion

		#region " Data Access & Factory Methods "

		internal static ROSecurityOrganisationProtectedAreaGroupUser GetROSecurityOrganisationProtectedAreaGroupUser(SafeDataReader dr)
		{
			var r = new ROSecurityOrganisationProtectedAreaGroupUser();
			r.Fetch(dr);
			return r;
		}

		protected void Fetch(SafeDataReader sdr)
		{
			int i = 0;
			LoadProperty(SecurityOrganisationProtectedAreaGroupUserIdProperty, sdr.GetInt32(i++));
			LoadProperty(UserIDProperty, sdr.GetInt32(i++));
			LoadProperty(OrganisationIDProperty, sdr.GetInt32(i++));
			LoadProperty(OrganisationNameProperty, sdr.GetString(i++));
			LoadProperty(ProtectedAreaIDProperty, sdr.GetInt32(i++));
			LoadProperty(METTReportingNameProperty, sdr.GetString(i++));
			LoadProperty(SecurityGroupIDProperty, sdr.GetInt32(i++));
			LoadProperty(SecurityGroupProperty, sdr.GetString(i++));
			LoadProperty(SecurityGroupRoleIDProperty, sdr.GetInt32(i++));
			LoadProperty(SecurityRoleIDProperty, sdr.GetInt32(i++));
			LoadProperty(SectionNameProperty, sdr.GetString(i++));
			LoadProperty(SecurityRoleProperty, sdr.GetString(i++));
			LoadProperty(DescriptionProperty, sdr.GetString(i++));
		}

		#endregion



	}

}