// Generated 03 Aug 2018 12:56 - Singular Systems Object Generator Version 2.2.694
//<auto-generated/>
using System;
using Csla;
using Csla.Serialization;
using Csla.Data;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using Singular;
using System.Data;
using System.Data.SqlClient;
using METTLib.Ratings;

namespace METTLib.RO
{
	[Serializable]
	public class ROThreatMatrix
	 : SingularReadOnlyBase<ROThreatMatrix>
	{
		#region " Properties and Methods "

		#region " Properties "

		public static PropertyInfo<int> ItemOneIdProperty = RegisterProperty<int>(c => c.ItemOneId, "ID");
		/// <summary>
		/// Gets the ID value
		/// </summary>
		[Display(AutoGenerateField = false), Key]
		public int ItemOneId
		{
			get { return GetProperty(ItemOneIdProperty); }
		}

		public static PropertyInfo<String> ThreatRatingItemNameProperty = RegisterProperty<String>(c => c.ThreatRatingItemName, "Threat Rating Item Name");
		/// <summary>
		/// Gets the Threat Rating Item Name value
		/// </summary>
		[Display(Name = "Threat Rating Item Name", Description = "")]
		public String ThreatRatingItemName
		{
			get { return GetProperty(ThreatRatingItemNameProperty); }
		}

		public static PropertyInfo<String> RatingNameProperty = RegisterProperty<String>(c => c.RatingName, "Rating Name");
		/// <summary>
		/// Gets the Rating Name value
		/// </summary>
		[Display(Name = "Rating Name", Description = "")]
		public String RatingName
		{
			get { return GetProperty(RatingNameProperty); }
		}

		public static PropertyInfo<int> ItemOneRatingIDProperty = RegisterProperty<int>(c => c.ItemOneRatingID, "Item One Rating");
		/// <summary>
		/// Gets the Item One Rating value
		/// </summary>
		[Display(Name = "Item One Rating", Description = "")]
		public int ItemOneRatingID
		{
			get { return GetProperty(ItemOneRatingIDProperty); }
		}

		public static PropertyInfo<int> VeryHighProperty = RegisterProperty<int>(c => c.VeryHigh, "Very High");
		/// <summary>
		/// Gets the Very High value
		/// </summary>
		[Display(Name = "Very High", Description = ""), Singular.DataAnnotations.DropDownWeb(typeof(RORatingList), ValueMember = "RatingID", DisplayMember = "RatingName")]
		public int VeryHigh
		{
			get { return GetProperty(VeryHighProperty); }
		}

		public string VeryHighName => METTLib.Helpers.METTHelpers.GetSingularDropdownValue(this, nameof(VeryHigh));


		public static PropertyInfo<int> HighProperty = RegisterProperty<int>(c => c.High, "High");
		/// <summary>
		/// Gets the High value
		/// </summary>
		[Display(Name = "High", Description = ""), Singular.DataAnnotations.DropDownWeb(typeof(RORatingList), ValueMember = "RatingID", DisplayMember = "RatingName")]
		public int High
		{
			get { return GetProperty(HighProperty); }
		}

		public string HighName => METTLib.Helpers.METTHelpers.GetSingularDropdownValue(this, nameof(High));


		public static PropertyInfo<int> MediumProperty = RegisterProperty<int>(c => c.Medium, "Medium");
		/// <summary>
		/// Gets the Medium value
		/// </summary>
		[Display(Name = "Medium", Description = ""), Singular.DataAnnotations.DropDownWeb(typeof(RORatingList), ValueMember = "RatingID", DisplayMember = "RatingName")]
		public int Medium
		{
			get { return GetProperty(MediumProperty); }
		}

		public string MediumName => METTLib.Helpers.METTHelpers.GetSingularDropdownValue(this, nameof(Medium));


		public static PropertyInfo<int> LowProperty = RegisterProperty<int>(c => c.Low, "Low");
		/// <summary>
		/// Gets the Low value
		/// </summary>
		[Display(Name = "Low", Description = ""), Singular.DataAnnotations.DropDownWeb(typeof(RORatingList), ValueMember = "RatingID", DisplayMember = "RatingName")]
		public int Low
		{
			get { return GetProperty(LowProperty); }
		}

		public string LowName => METTLib.Helpers.METTHelpers.GetSingularDropdownValue(this, nameof(Low));

		#endregion

		#region " Methods "

		protected override object GetIdValue()
		{
			return GetProperty(ItemOneIdProperty);
		}

		public override string ToString()
		{
			return this.ThreatRatingItemName;
		}

		#endregion

		#endregion

		#region " Data Access & Factory Methods "

		internal static ROThreatMatrix GetROThreatMatrix(SafeDataReader dr)
		{
			var r = new ROThreatMatrix();
			r.Fetch(dr);
			return r;
		}

		protected void Fetch(SafeDataReader sdr)
		{
			int i = 0;
			LoadProperty(ItemOneIdProperty, sdr.GetInt32(i++));
			LoadProperty(ThreatRatingItemNameProperty, sdr.GetString(i++));
			LoadProperty(RatingNameProperty, sdr.GetString(i++));
			LoadProperty(ItemOneRatingIDProperty, Singular.Misc.ZeroNothing(sdr.GetInt32(i++)));
			LoadProperty(VeryHighProperty, sdr.GetInt32(i++));
			LoadProperty(HighProperty, sdr.GetInt32(i++));
			LoadProperty(MediumProperty, sdr.GetInt32(i++));
			LoadProperty(LowProperty, sdr.GetInt32(i++));
		}

		#endregion

	}

}