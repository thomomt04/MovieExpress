// Generated 16 Jul 2018 10:27 - Singular Systems Object Generator Version 2.2.694
//<auto-generated/>
using System;
using Csla;
using Csla.Serialization;
using Csla.Data;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using Singular;
using System.Data;
using System.Data.SqlClient;


namespace METTLib.RO
{
	[Serializable]
	public class ROQuestionnaireGroupAnswerResult
	 : METTReadOnlyBase<ROQuestionnaireGroupAnswerResult>
	{
		#region " Properties and Methods "

		#region " Properties "

		public static PropertyInfo<int> QuestionnaireGroupIDProperty = RegisterProperty<int>(c => c.QuestionnaireGroupID, "ID", 0);
		/// <summary>
		/// Gets the ID value
		/// </summary>
		[Display(AutoGenerateField = false), Key]
		public int QuestionnaireGroupID
		{
			get { return GetProperty(QuestionnaireGroupIDProperty); }
		}

		public static PropertyInfo<String> QuestionnaireGroupProperty = RegisterProperty<String>(c => c.QuestionnaireGroup, "Questionnaire Group", "");
		/// <summary>
		/// Gets the Questionnaire Group value
		/// </summary>
		[Display(Name = "Questionnaire Group", Description = "Representation of the questionaire group name")]
		public String QuestionnaireGroup
		{
			get { return GetProperty(QuestionnaireGroupProperty); }
		}


		public static PropertyInfo<int> GroupTotalAnswersProperty = RegisterProperty<int>(c => c.GroupTotalAnswers, "Group Total Answers", 0);
		/// <summary>
		/// Gets the Icon value
		/// </summary>
		[Display(Name = "Group Total Answers", Description = "")]
		public int? GroupTotalAnswers
		{
			get { return GetProperty(GroupTotalAnswersProperty); }
		}



		public static PropertyInfo<String> IconProperty = RegisterProperty<String>(c => c.Icon, "Icon", "");
		/// <summary>
		/// Gets the Icon value
		/// </summary>
		[Display(Name = "Icon", Description = "")]
		public String Icon
		{
			get { return GetProperty(IconProperty); }
		}

		public static PropertyInfo<int> CreatedByProperty = RegisterProperty<int>(c => c.CreatedBy, "Created By", 0);
		/// <summary>
		/// Gets the Created By value
		/// </summary>
		[Display(AutoGenerateField = false)]
		public int? CreatedBy
		{
			get { return GetProperty(CreatedByProperty); }
		}

		public static PropertyInfo<SmartDate> CreatedDateTimeProperty = RegisterProperty<SmartDate>(c => c.CreatedDateTime, "Created Date Time", new SmartDate(DateTime.Now));
		/// <summary>
		/// Gets the Created Date Time value
		/// </summary>
		[Display(AutoGenerateField = false)]
		public SmartDate CreatedDateTime
		{
			get { return GetProperty(CreatedDateTimeProperty); }
		}

		public static PropertyInfo<int> ModifiedByProperty = RegisterProperty<int>(c => c.ModifiedBy, "Modified By", 0);
		/// <summary>
		/// Gets the Modified By value
		/// </summary>
		[Display(AutoGenerateField = false)]
		public int? ModifiedBy
		{
			get { return GetProperty(ModifiedByProperty); }
		}

		public static PropertyInfo<SmartDate> ModifiedDateTimeProperty = RegisterProperty<SmartDate>(c => c.ModifiedDateTime, "Modified Date Time", new SmartDate(DateTime.Now));
		/// <summary>
		/// Gets the Modified Date Time value
		/// </summary>
		[Display(AutoGenerateField = false)]
		public SmartDate ModifiedDateTime
		{
			get { return GetProperty(ModifiedDateTimeProperty); }
		}

		public Boolean IsExpanded { get; set; }


		#endregion

		#region " Child Lists "

		public static PropertyInfo<ROQuestionnaireAnswerResultList> ROQuestionnaireAnswerResultListProperty = RegisterProperty<ROQuestionnaireAnswerResultList>(c => c.ROQuestionnaireAnswerResultList, "RO Questionnaire Answer Result List");

		public ROQuestionnaireAnswerResultList ROQuestionnaireAnswerResultList
		{
			get
			{
				if (GetProperty(ROQuestionnaireAnswerResultListProperty) == null)
				{
					LoadProperty(ROQuestionnaireAnswerResultListProperty, RO.ROQuestionnaireAnswerResultList.NewROQuestionnaireAnswerResultList());
				}
				return GetProperty(ROQuestionnaireAnswerResultListProperty);
			}
		}

		#endregion

		#region " Methods "

		protected override object GetIdValue()
		{
			return GetProperty(QuestionnaireGroupIDProperty);
		}

		public override string ToString()
		{
			return this.QuestionnaireGroup;
		}


		#endregion

		#endregion

		#region " Data Access & Factory Methods "

		internal static ROQuestionnaireGroupAnswerResult GetROQuestionnaireGroupAnswerResult(SafeDataReader dr)
		{
			var r = new ROQuestionnaireGroupAnswerResult();
			r.Fetch(dr);
			return r;
		}

		protected void Fetch(SafeDataReader sdr)
		{
			int i = 0;
			LoadProperty(QuestionnaireGroupIDProperty, sdr.GetInt32(i++));
			LoadProperty(QuestionnaireGroupProperty, sdr.GetString(i++));
			LoadProperty(GroupTotalAnswersProperty, sdr.GetInt32(i++));
			LoadProperty(IconProperty, sdr.GetString(i++));
			LoadProperty(CreatedByProperty, sdr.GetInt32(i++));
			LoadProperty(CreatedDateTimeProperty, sdr.GetSmartDate(i++));
			LoadProperty(ModifiedByProperty, sdr.GetInt32(i++));
			LoadProperty(ModifiedDateTimeProperty, sdr.GetSmartDate(i++));
		}

		#endregion

	}

}