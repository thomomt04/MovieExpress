// Generated 27 Jul 2018 08:06 - Singular Systems Object Generator Version 2.2.693
//<auto-generated/>
using System;
using Csla;
using Csla.Serialization;
using Csla.Data;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using Singular;
using System.Data;
using System.Data.SqlClient;


namespace MELib.Security
{
	[Serializable]
	public class ROSecurityGroup
	 : MEReadOnlyBase<ROSecurityGroup>
	{
		#region " Properties and Methods "

		#region " Properties "

		public static PropertyInfo<int> SecurityGroupIDProperty = RegisterProperty<int>(c => c.SecurityGroupID, "ID", 0);
		/// <summary>
		/// Gets the ID value
		/// </summary>
		[Display(AutoGenerateField = false), Key, DisplayName("ID")]
		public int SecurityGroupID
		{
			get { return GetProperty(SecurityGroupIDProperty); }
		}

		public static PropertyInfo<String> SecurityGroupProperty = RegisterProperty<String>(c => c.SecurityGroup, "Securitygroup", "");
		/// <summary>
		/// Gets the Securitygroup value
		/// </summary>
		[Display(Name = "Security group", Description = "The Name of the Group."), DisplayName("Securitygroup")]
		public String SecurityGroup
		{
			get { return GetProperty(SecurityGroupProperty); }
		}

		public static PropertyInfo<String> DescriptionProperty = RegisterProperty<String>(c => c.Description, "Description", "");
		/// <summary>
		/// Gets the Description value
		/// </summary>
		[Display(Name = "Description", Description = "A Short Description of the Group."), DisplayName("Description")]
		public String Description
		{
			get { return GetProperty(DescriptionProperty); }
		}

		public static PropertyInfo<Boolean> IsActiveIndProperty = RegisterProperty<Boolean>(c => c.IsActiveInd, "Active", false);
		/// <summary>
		/// Gets the Isactiveind value
		/// </summary>
		[Display(Name = "Active", Description = "")]
		public Boolean IsActiveInd
		{
			get { return GetProperty(IsActiveIndProperty); }
			set { LoadProperty(IsActiveIndProperty, value); }
		}

		#endregion

		#region " Methods "

		protected override object GetIdValue()
		{
			return GetProperty(SecurityGroupIDProperty);
		}

		public override string ToString()
		{
			return this.SecurityGroup;
		}

		#endregion

		#endregion

		#region " Data Access & Factory Methods "

		internal static ROSecurityGroup GetROSecurityGroup(SafeDataReader dr)
		{
			var r = new ROSecurityGroup();
			r.Fetch(dr);
			return r;
		}

		protected void Fetch(SafeDataReader sdr)
		{
			int i = 0;
			LoadProperty(SecurityGroupIDProperty, sdr.GetInt32(i++));
			LoadProperty(SecurityGroupProperty, sdr.GetString(i++));
			LoadProperty(DescriptionProperty, sdr.GetString(i++));
		}

		#endregion

	}

}